{
    "contents" : "hw4q2 - KNN on sonar data\n========================================================\n\n## q2a\n\n### Load data, libs\n\n```{r}\nsetwd(\"./data\")\n\ntrain<-read.csv(\"sonar_train.csv\",header=F)\ntest<-read.csv(\"sonar_test.csv\",header=F)\n\nsetwd(\"../\")\n\nlibrary(class)\n```\n\n### Create training and test sets\n\n```{r}\n# create x and y training vars\ny<-as.factor(train[,61])\nx<-train[,1:60]\n\n# create x and y test vars\ny_test<-as.factor(test[,61])\nx_test<-test[,1:60]\n```\n\n### Fit models varying k. Assess fit on train and test data. \n\n```{r}\niter<-10\n\nerrors<-matrix(data=NA,nrow=iter,ncol=3)\ncolnames(errors)<-c(\"k\",\"train\",\"test\")\n\nfor(i in 1:iter){\n     errors[i,1]<-i\n     \n     # fit model on training data\n     fit.tr<-knn(x,x,cl=y,k=i)\n     \n     # calculate/log training error\n     errors[i,2]<-1-sum(y==fit.tr)/length(y)\n     \n     # fit model on test data\n     fit.te<-knn(x,x_test,y,k=i)\n     \n     # calculate/log test error\n     errors[i,3]<-1-sum(y_test==fit.te)/length(y_test)\n}\n```\n\n### Output graph\n\n```{r}\nplot(errors[,2]~errors[,1],type=\"l\",col=\"blue\",\n     main=\"Sonar KNN Train & Test Errors (Michael Downs)\",\n     xlab=\"k\",ylab=\"error rate\",ylim=c(0,0.4),lwd=3)\n\nlines(errors[,3]~errors[,1],type=\"l\",col=\"red4\",lwd=3)\n\nlegend(\"bottomright\",col=c(\"blue\",\"red4\"),lwd=3,\n       legend=c(\"training error\",\"test error\"))\n```\n\n### Answer question\n\n```{r}\nminVal<-errors[which.min(errors[,3]),3]\nminK<-errors[which.min(errors[,3]),1]\nprint(c(\"Lowest test error of \",round(minVal,3),\"and k of \",minK))\n```\n\n## q2b\n\n### Save off errors\n\n```{r}\nerrors1<-errors\n```\n\n### Load data, libs\n\n```{r}\nsetwd(\"./data\")\n\ntrain<-read.csv(\"sonar_train.csv\",header=F)\ntest<-read.csv(\"sonar_test.csv\",header=F)\n\nsetwd(\"../\")\n\nlibrary(class)\n```\n\n### Create training and test sets\n\n```{r}\n# create x and y training vars\ny<-as.factor(train[,61])\nx<-train[,1:60]\n\n# create x and y test vars\ny_test<-as.factor(test[,61])\nx_test<-test[,1:60]\n```\n\n### Fit models varying k. Assess fit on train and test data. \n\n```{r}\niter<-10\n\nerrors<-matrix(data=NA,nrow=iter,ncol=3)\ncolnames(errors)<-c(\"k\",\"train\",\"test\")\n\nfor(i in 1:iter){\n     errors[i,1]<-i\n     \n     # fit model on training data\n     fit.tr<-knn(x,x,cl=y,k=i)\n     \n     # calculate/log training error\n     errors[i,2]<-1-sum(y==fit.tr)/length(y)\n     \n     # fit model on test data\n     fit.te<-knn(x,x_test,y,k=i)\n     \n     # calculate/log test error\n     errors[i,3]<-1-sum(y_test==fit.te)/length(y_test)\n}\n```\n\n### Plot both sets of errors\n\n```{r}\nplot(errors[,2]~errors[,1],type=\"l\",col=\"blue\",\n     main=\"Sonar KNN Train & Test Errors (Michael Downs)\",\n     xlab=\"k\",ylab=\"error rate\",ylim=c(0,0.4),lwd=3)\n\nlines(errors[,3]~errors[,1],type=\"l\",col=\"red1\",lwd=3)\n\nlines(errors1[,2]~errors1[,1],type=\"l\",col=\"light blue\",lwd=3,lty=2)\nlines(errors1[,3]~errors1[,1],type=\"l\",col=\"red4\",lwd=3,lty=2)\n\nlegend(\"bottomright\",col=c(\"blue\",\"lightblue\",\"red4\",\"red1\"),lwd=3,\n       legend=c(\"train error iter2\",\"train error iter1\", \"test error iter2\",\"test error iter1\"))\n```\n\n### Answer question\n\n```{r}\nminVal<-errors[which.min(errors[,3]),3]\nminK<-errors[which.min(errors[,3]),1]\nprint(c(\"Lowest test error of \",round(minVal,3),\"and k of \",minK))\n```\n",
    "created" : 1406306257360.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4012655425",
    "id" : "376EEEE5",
    "lastKnownWriteTime" : 1407539164,
    "path" : "~/stats202lectureR/hw4q2.Rmd",
    "project_path" : "hw4q2.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}