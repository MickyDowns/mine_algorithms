{
    "contents" : "hw4p6 \n========================================================  \n\n### Initialize data\n\n```{r}\nlibrary(rpart)\n\nsetwd(\"./data\")\nson_train<-read.csv(\"sonar_train.csv\",header=F)\nson_test<-read.csv(\"sonar_test.csv\",header=F)\nsetwd(\"../\")\n\ny_train<-son_train[,61]\nx_train<-son_train[,1:60]\n\ny_test<-son_test[,61]\nx_test<-son_test[,1:60]\n\n```\n\n### Add vectors to track results on each iteration\n\n```{r}\n## track the training and test errors for each of 500 revs.\ntrain_error<-rep(0,500)\ntest_error<-rep(0,500)\n\n## \"f\", the weighted vote of the decision trees applied to train and test data. \nf_train<-rep(0,130)\nf_test<-rep(0,78)\n\ni<-1\n\n```\n\n### Set up loop\n\n```{r}\nset.seed(123)\n\nwhile(i<=500) {\n\n     w<-exp(-y_train*f_train) ## Initialize vector of weights\n\n     w<-w/sum(w) ## Normalize weights\n     \n     fit<-rpart(y_train~.,x_train,w,method=\"class\") \n     ## Fit tree classifier to training data using weights\n     \n     g_train<--1+2*(predict(fit,x_train)[,2]>0.5)\n     ## Calc g flagging successful (1) and unsuccessful (-1) x[i] predictions\n           \n     g_test<--1+2*(predict(fit,x_test)[,2]>0.5)\n\n     e<-sum(w*(y_train*g_train<0)) ## Compute weighted (w[m]) misclass errors (e[m]) \n     \n     alpha<-0.5*log((1-e)/e)\n     ## 1/2 log odds of the sum of the misclass errors (e[m])\n     \n     f_train<-f_train+alpha*g_train\n     ## Take prior f_train[m] vect, add tree weight (alpha) * the indiv observation values (g[m]) combining tree and observation weights\n     \n     f_test<-f_test+alpha*g_test\n     \n     train_error[i]<-sum(1*f_train*y_train<0)/130 ## Compute and save training error \n     \n     test_error[i]<-sum(1*f_test*y_test<0)/78\n\n     i<-i+1\n}\nprint(min(test_error)) # minimum test error\nprint(which.min(test_error)) # minimum test error iteration\n\nprint(test_error[iter]) # final test error\n```\n\n### Output graphic\n\n```{r}\nplot(seq(1,500),test_error,type=\"l\",ylim=c(0,0.5),ylab=\"Error Rate\",\n     xlab=\"Iterations\",lwd=2,col=\"black\")\nlines(train_error,lwd=2,col=\"purple\")\nlegend(4,0.5,c(\"Training Error\",\"Test Error\"),col=(c(\"purple\",\"black\",lwd=2)))\n```",
    "created" : 1406924276440.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1029469349",
    "id" : "CB363EFD",
    "lastKnownWriteTime" : 1407627137,
    "path" : "~/stats202lectureR/hw4p6.Rmd",
    "project_path" : "hw4p6.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}